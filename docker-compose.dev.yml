version: "3.8"

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: lumina_production
      POSTGRES_USER: lumina_user
      POSTGRES_PASSWORD: secure_password_change_this
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./prisma/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U lumina_user -d lumina_production"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for queues and caching
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Main Next.js application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: dev
    environment:
      - DATABASE_URL=postgresql://lumina_user:secure_password_change_this@postgres:5432/lumina_production
      - REDIS_URL=redis://redis:6379
      - NEXTAUTH_SECRET=your-super-secure-production-secret-key
      - NEXTAUTH_URL=https://yourdomain.com
      - ADMIN_EMAIL=admin@yourdomain.com
      - ADMIN_PASSWORD=your-secure-admin-password
      - S3_ENDPOINT=https://s3.amazonaws.com
      - S3_BUCKET=your-production-bucket
      - S3_ACCESS_KEY=your-production-access-key
      - S3_SECRET_KEY=your-production-secret-key
      - S3_REGION=us-east-1
      - PHOTOS_ROOT_PATH=/var/app/photos
      - SYNC_CRON=0 3 * * *
    ports:
      - "3010:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./temp:/app/temp
      - ${PHOTOS_ROOT_PATH:-photos_data}:/var/app/photos
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Worker for thumbnail generation
  worker-thumbnails:
    build:
      context: .
      dockerfile: Dockerfile
      target: dev
    command: npm run worker:thumbnails:all
    environment:
      - DATABASE_URL=postgresql://lumina_user:secure_password_change_this@postgres:5432/lumina_production
      - REDIS_URL=redis://redis:6379
      - S3_ENDPOINT=https://s3.amazonaws.com
      - S3_BUCKET=your-production-bucket
      - S3_ACCESS_KEY=your-production-access-key
      - S3_SECRET_KEY=your-production-secret-key
      - S3_REGION=us-east-1
      - PHOTOS_ROOT_PATH=/var/app/photos
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./temp:/app/temp
      - ${PHOTOS_ROOT_PATH:-photos_data}:/var/app/photos
    deploy:
      replicas: 1

  # Worker for blurhash generation
  worker-blurhash:
    build:
      context: .
      dockerfile: Dockerfile
      target: dev
    command: npm run worker:blurhash
    environment:
      - DATABASE_URL=postgresql://lumina_user:secure_password_change_this@postgres:5432/lumina_production
      - REDIS_URL=redis://redis:6379
      - S3_ENDPOINT=https://s3.amazonaws.com
      - S3_BUCKET=your-production-bucket
      - S3_ACCESS_KEY=your-production-access-key
      - S3_SECRET_KEY=your-production-secret-key
      - S3_REGION=us-east-1
      - PHOTOS_ROOT_PATH=/var/app/photos
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./temp:/app/temp
      - ${PHOTOS_ROOT_PATH:-photos_data}:/var/app/photos
    deploy:
      replicas: 1

  # Worker for EXIF data extraction
  worker-exif:
    build:
      context: .
      dockerfile: Dockerfile
      target: dev
    command: npm run worker:exif
    environment:
      - DATABASE_URL=postgresql://lumina_user:secure_password_change_this@postgres:5432/lumina_production
      - REDIS_URL=redis://redis:6379
      - S3_ENDPOINT=https://s3.amazonaws.com
      - S3_BUCKET=your-production-bucket
      - S3_ACCESS_KEY=your-production-access-key
      - S3_SECRET_KEY=your-production-secret-key
      - S3_REGION=us-east-1
      - PHOTOS_ROOT_PATH=/var/app/photos
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./temp:/app/temp
      - ${PHOTOS_ROOT_PATH:-photos_data}:/var/app/photos
    deploy:
      replicas: 1

  # Worker for file uploads/sync
  worker-uploads:
    build:
      context: .
      dockerfile: Dockerfile
      target: dev
    command: npm run worker:uploads
    environment:
      - DATABASE_URL=postgresql://lumina_user:secure_password_change_this@postgres:5432/lumina_production
      - REDIS_URL=redis://redis:6379
      - S3_ENDPOINT=https://s3.amazonaws.com
      - S3_BUCKET=your-production-bucket
      - S3_ACCESS_KEY=your-production-access-key
      - S3_SECRET_KEY=your-production-secret-key
      - S3_REGION=us-east-1
      - PHOTOS_ROOT_PATH=/var/app/photos
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./temp:/app/temp
      - ${PHOTOS_ROOT_PATH:-photos_data}:/var/app/photos
    deploy:
      replicas: 1

  # Worker for sync operations
  worker-sync:
    build:
      context: .
      dockerfile: Dockerfile
      target: dev
    command: npm run worker:sync
    environment:
      - DATABASE_URL=postgresql://lumina_user:secure_password_change_this@postgres:5432/lumina_production
      - REDIS_URL=redis://redis:6379
      - S3_ENDPOINT=https://s3.amazonaws.com
      - S3_BUCKET=your-production-bucket
      - S3_ACCESS_KEY=your-production-access-key
      - S3_SECRET_KEY=your-production-secret-key
      - S3_REGION=us-east-1
      - PHOTOS_ROOT_PATH=/var/app/photos
      - SYNC_CRON=0 3 * * *
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./temp:/app/temp
      - ${PHOTOS_ROOT_PATH:-photos_data}:/var/app/photos
    deploy:
      replicas: 1

volumes:
  postgres_data:
  redis_data:
  photos_data:
